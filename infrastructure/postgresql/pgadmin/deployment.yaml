apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: mirror.gcr.io/dpage/pgadmin4:9.8@sha256:d115bcd737940a6cfb61a54439d50de8b850e0782e2363102c9fa761f4022f49
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: pgadmin-email
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: pgadmin-password
            - name: PGADMIN_SERVER_JSON_FILE
              value: /volume/secret/servers.json
            - name: PGADMIN_CONFIG_ENABLE_SERVER_PASS_EXEC_CMD
              value: "True"
          startupProbe:
            httpGet:
              path: /
              port: 80
            failureThreshold: 30
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
          volumeMounts:
            - name: pgadmin-storage
              mountPath: /var/lib/pgadmin
            - name: postgres-secret
              readOnly: true
              mountPath: /volume/secret
          resources:
            requests:
              cpu: 0m
              memory: 0Mi
            limits:
              cpu: 500m
              memory: 400Mi
      volumes:
        - name: pgadmin-storage
          emptyDir: {}
        - name: postgres-secret
          secret:
            secretName: postgres-secret
            items:
              - key: servers.json
                path: servers.json
