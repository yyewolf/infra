apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: sonarr
          image: lscr.io/linuxserver/sonarr:latest@sha256:f3a7fda30a0133b24b04857a21e7a81b97ed2722e147503a47ad0b4fbc7c7694
          ports:
            - containerPort: 8989
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          hostPath:
            path: /tank/servarr/config/sonarr
            type: DirectoryOrCreate
        - name: data
          hostPath:
            path: /tank/servarr
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: radarr
          image: lscr.io/linuxserver/radarr:latest@sha256:f174546a0ad7eb9a9170e4142bef6f74ef3ebfe6209528fded40630369406dc0
          ports:
            - containerPort: 7878
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          hostPath:
            path: /tank/servarr/config/radarr
            type: DirectoryOrCreate
        - name: data
          hostPath:
            path: /tank/servarr
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: prowlarr
          image: lscr.io/linuxserver/prowlarr:latest@sha256:964485823771c102427a0c1cd896cf6b576add6f21bd041498b92cb040ee7270
          ports:
            - containerPort: 9696
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: config
              mountPath: /config
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          hostPath:
            path: /tank/servarr/config/prowlarr
            type: DirectoryOrCreate

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: qbittorrent-openvpn
          image: mirror.gcr.io/jovalle/qbittorrent-openvpn:v0.3.1
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
          ports:
            - containerPort: 8080
            - containerPort: 6881
              protocol: TCP
            - containerPort: 6881
              protocol: UDP
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Paris"
            - name: K8S_CLUSTER
              value: "yes"
            - name: K8S_POD_CIDR
              value: "10.64.0.0/16"
            - name: K8S_SVC_CIDR
              value: "10.96.0.0/16"
            - name: LAN_CIDR
              value: "192.168.1.0/24"
            - name: VPN_ENABLED
              value: "yes"
            - name: KUBERNETES_ENABLED
              value: "yes"
            - name: VPN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: nordvpn-secret
                  key: username
            - name: VPN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nordvpn-secret
                  key: password
            - name: OPENVPN_USER
              valueFrom:
                secretKeyRef:
                  name: nordvpn-secret
                  key: username
            - name: OPENVPN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nordvpn-secret
                  key: password
            - name: NAME_SERVERS
              value: "8.8.8.8,8.8.4.4"
            - name: DEBUG
              value: "no"
            - name: UMASK
              value: "002"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: config
          hostPath:
            path: /tank/servarr/config/qbittorrent
            type: DirectoryOrCreate
        - name: data
          hostPath:
            path: /tank/servarr
            type: Directory
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-device-plugin-daemonset
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: nvidia-device-plugin-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: nvidia-device-plugin-ds
    spec:
      priorityClassName: system-node-critical
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
      - image: nvcr.io/nvidia/k8s-device-plugin:v0.17.4@sha256:3c54348fe5a57e5700e7d8068e7531d2ef2d5f3ccb70c8f6bac0953432527abd
        name: nvidia-device-plugin-ctr
        resources:
          requests:
            cpu: 50m
            memory: 10Mi
          limits:
            cpu: 50m
            memory: 200Mi
        env:
          - name: FAIL_ON_INIT_ERROR
            value: "false"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: device-plugin
          mountPath: /var/lib/kubelet/device-plugins
      volumes:
      - name: device-plugin
        hostPath:
          path: /var/lib/kubelet/device-plugins
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: jellyfin
          image: lscr.io/linuxserver/jellyfin:latest@sha256:68e012f4bf5aeb114632e9045f5b2f2f6713536693093f70fcb338179f84f86c
          ports:
            - containerPort: 8096
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 3000m
              memory: 5Gi
              nvidia.com/gpu: 1
      volumes:
        - name: config
          hostPath:
            path: /tank/servarr/config/jellyfin
            type: DirectoryOrCreate
        - name: data
          hostPath:
            path: /tank/servarr
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyseerr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyseerr
  template:
    metadata:
      labels:
        app: jellyseerr
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: jellyseerr
          image: mirror.gcr.io/fallenbagel/jellyseerr:latest@sha256:4538137bc5af902dece165f2bf73776d9cf4eafb6dd714670724af8f3eb77764
          ports:
            - containerPort: 5055
          env:
            - name: LOG_LEVEL
              value: "debug"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: config
              mountPath: /app/config
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          hostPath:
            path: /tank/servarr/config/jellyseerr
            type: DirectoryOrCreate

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaresolverr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaresolverr
  template:
    metadata:
      labels:
        app: flaresolverr
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: flaresolverr
          image: ghcr.io/flaresolverr/flaresolverr:latest@sha256:42ffb1cc56088899e91a7382bc611b00fa7cbd016accfed12c0695275ca18451
          ports:
            - containerPort: 8191
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_HTML
              value: "false"
            - name: CAPTCHA_SOLVER
              value: "none"
            - name: TZ
              value: "Europe/Paris"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bazarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bazarr
  template:
    metadata:
      labels:
        app: bazarr
    spec:
      automountServiceAccountToken: false
      nodeSelector:
        location: home1
      tolerations:
        - key: "PrivateNode"
          operator: "Equal"
          value: "home1"
      containers:
        - name: bazarr
          image: lscr.io/linuxserver/bazarr:latest@sha256:005f97fcab0fd7402cd7ff3c09f5ff4da4c63ca51be487e90d5c4dc8a8f85a45
          ports:
            - containerPort: 6767
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media-tv
              mountPath: /tv
            - name: media-movies
              mountPath: /movies
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: config
          hostPath:
            path: /tank/servarr/config/bazarr
            type: DirectoryOrCreate
        - name: media-tv
          hostPath:
            path: /tank/servarr/media/tv
            type: DirectoryOrCreate
        - name: media-movies
          hostPath:
            path: /tank/servarr/media/movies
            type: DirectoryOrCreate
