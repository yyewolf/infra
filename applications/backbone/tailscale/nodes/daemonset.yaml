apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tailscale
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: tailscale
  template:
    metadata:
      labels:
        app: tailscale
    spec:
      dnsPolicy: "ClusterFirstWithHostNet"
      hostNetwork: true
      hostPID: true
      hostIPC: true
      serviceAccountName: default
      restartPolicy: Always
      volumes:
      - name: host-root
        hostPath:
          path: /
          type: Directory
      - name: tailscale-config
        emptyDir: {}
      initContainers:
      - name: generate-auth-key
        image: mirror.gcr.io/golang:alpine@sha256:aee43c3ccbf24fdffb7295693b6e33b21e01baec1b2a55acc351fde345e9ec34
        envFrom:
        - secretRef:
            name: tailscale-oauth
        env:
        - name: TS_TAILNET_NAME
          valueFrom:
            configMapKeyRef:
              name: tailscale-config
              key: tailnetName
              optional: true
        - name: TAILSCALE_AUTH_KEY_FILE
          value: /config/authkey
        command:
        - sh
        - -c
        - |
          set -e

          apk add --no-cache git

          AUTH_KEY=$(go run tailscale.com/cmd/get-authkey@latest -tags tag:k8s)
          if [ -z "$AUTH_KEY" ] || [ "$AUTH_KEY" = "null" ]; then
            echo "Failed to generate auth key" >&2
            exit 1
          fi
          echo -n "$AUTH_KEY" > "$TAILSCALE_AUTH_KEY_FILE"
        volumeMounts:
        - name: tailscale-config
          mountPath: /config
      containers:
      - name: tailscaled
        image: tailscale/tailscale:stable@sha256:8eb8b450a85856807e8a216c4697333e15f8701cb6d344bed851bf6aa6a9605c
        securityContext:
          privileged: true
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - name: host-root
          mountPath: /host
        - name: tailscale-config
          mountPath: /config
        command:
        - sh
        - -c
        - |
          echo "Chrooting into host filesystem..."
          cp /config/authkey /host/tmp/authkey
          chroot /host /bin/bash -c '
            if [[ "$(uname -r)" != 6.8.12* ]]; then
              add-apt-repository ppa:cappelikan/ppa -y
              apt update
              apt install -y mainline policykit-1
              mainline install 6.8.12
              reboot
            else
              echo "✅ Kernel $(uname -r) is already 6.8.12 — no action needed."
            fi

            curl -fsSL https://tailscale.com/install.sh | sh
            systemctl disable --now tailscaled || true
            tailscaled --state=/var/lib/tailscale/tailscaled.state &
            sleep 5
            tailscale up \
              --authkey="$(cat /tmp/authkey)" \
              --hostname="$(hostname)" \
              --accept-dns=false \
              --accept-routes=false \
              --ssh
            echo "Tailscale started for node $(hostname)"

            # Setup trap to cleanly stop tailscaled on exit
            trap "tailscale down; killall tailscaled; exit" EXIT
            sleep infinity
          '
