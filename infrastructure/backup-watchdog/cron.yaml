apiVersion: batch/v1
kind: CronJob
metadata:
  name: k8up-backup-status-report
spec:
  schedule: "0 7 * * *"  # At 7 AM every day
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 3600
      template:
        spec:
          serviceAccountName: k8up-reader
          restartPolicy: Never
          containers:
            - name: backup-status
              image: lachlanevenson/k8s-kubectl@sha256:6e16ad356091ddfc95cd90fb7145b927531b45798e89d397a4c5e8fb64f8a5f5
              env:
                - name: NOTIFY_URL
                  valueFrom:
                    secretKeyRef:
                      name: notify-url
                      key: URL
              command:
                - /bin/sh
                - -c
                - |
                  apk add --no-cache curl jq
                  set -e
                  echo "Collecting backup statuses..."
                  
                  message="> Backup Statuses\n\n"
                  message="${message}Status | Namespace | Creation Time\n\n"
                  for ns in $(kubectl get ns -o jsonpath='{.items[*].metadata.name}'); do
                    latest=$(kubectl get backups.k8up.io -n "$ns" --sort-by=.metadata.creationTimestamp -o json 2>/dev/null | jq -r '.items[-1]')
                    if [ "$latest" != "null" ]; then
                      time=$(echo "$latest" | jq -r '.metadata.creationTimestamp' || echo "N/A")
                      status=$(echo "$latest" | jq -r '.status.conditions | map(select(.type == "Completed")) | .[0].reason' || echo "N/A")
                      if [[ "$status" == "Succeeded" ]]; then
                        status="OK"
                      elif [[ "$status" == "Failed" ]]; then
                        status="NOK"
                      else
                        status="?"
                      fi
                      message="${message}${status} - ${ns} - ${time}\n"
                    fi
                  done
                  encoded=$(echo -e "$message" | jq -s -R -r @uri)
                  cleaned=$(echo "$encoded" | sed -E 's/(%0A)+$//')
                  echo "Sending message to notify URL..."
                  echo "Message: $message"
                  echo "${NOTIFY_URL}&msg=${cleaned}" 
                  curl "${NOTIFY_URL}&msg=${cleaned}" 
